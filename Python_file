import serial
import pandas as pd
from datetime import datetime

# Configure the serial port
arduino_port = "COM4"  # Ensure this matches your Arduino port
baud = 9600
ser = serial.Serial(arduino_port, baud, timeout=1)

# Initialize Excel file
excel_file = "voter_data.xlsx"
columns = ["Fingerprint ID", "Name", "Voted", "Timestamp"]

# Define user list as in Arduino
users = [
    #{"fingerID": 62, "name": "Karishma"},
    #{"fingerID": 62, "name": "Karishma"},
    {"fingerID": 97, "name": "Pranesh"},
    {"fingerID": 62, "name": "Karishma"},
    {"fingerID": 68, "name": "Kevin Nashmith"},
    {"fingerID": 71, "name": "Kowshik"},
    {"fingerID": 93, "name": "Nithish"},
    # Add more users if needed
]

# Create initial DataFrame with all users marked as not voted
df = pd.DataFrame(
    [{"Fingerprint ID": user["fingerID"], "Name": user["name"], "Voted": "No", "Timestamp": "-"} for user in users]
)

try:
    print("Listening for data...")
    while True:
        if ser.in_waiting > 0:
            line = ser.readline().decode('utf-8').strip()
            print(f"Received: {line}")

            if line.startswith("Name:"):
                # Parse name and registration number from Arduino's output
                parts = line.split(", ")
                name = parts[0].split(": ")[1]
                reg_no = parts[1].split(": ")[1]
                voter_id = next((user["fingerID"] for user in users if user["name"] == name), None)

                # Get current timestamp
                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

                # Update DataFrame
                df.loc[df["Fingerprint ID"] == voter_id, ["Voted", "Timestamp"]] = ["Yes", timestamp]

                # Save to Excel
                df.to_excel(excel_file, index=False)
                print(f"Updated and saved to {excel_file}")

except KeyboardInterrupt:
    print("Exiting...")
finally:
    ser.close()
